// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/1/DMux8Way.hdl
/**
 * 8-way demultiplexor:
 * [a, b, c, d, e, f, g, h] = [in, 0,  0,  0,  0,  0,  0,  0] if sel = 000
 *                            [0, in,  0,  0,  0,  0,  0,  0] if sel = 001
 *                            [0,  0, in,  0,  0,  0,  0,  0] if sel = 010
 *                            [0,  0,  0, in,  0,  0,  0,  0] if sel = 011
 *                            [0,  0,  0,  0, in,  0,  0,  0] if sel = 100
 *                            [0,  0,  0,  0,  0, in,  0,  0] if sel = 101
 *                            [0,  0,  0,  0,  0,  0, in,  0] if sel = 110
 *                            [0,  0,  0,  0,  0,  0,  0, in] if sel = 111
 */
CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:
    Not(in=sel[0] , out=ns0 );
    Not(in=sel[1] , out=ns1 );
    Not(in=sel[2] , out=ns2 );
    And(a=sel[0] , b=sel[1] , out=s0s1 );
    And(a=sel[1] , b=sel[2] , out=s1s2 );
    And(a=ns0 , b=sel[1], out=ns0s1 );
    And(a=ns0 , b=ns1 , out=ns0ns1 );
    And(a=ns0ns1 , b=ns2 , out=isA ); // isA
    And(a=sel[0] , b=ns1 , out=s0ns1 );
    And(a=s0ns1 , b=ns2 , out=isB ); // isB
    And(a=ns0s1 , b=ns2 , out=isC ); // isC
    And(a=s0s1 , b=ns2 , out=isD ); // isD
    And(a=sel[2], b=ns0ns1 , out=isE ); // isE
    And(a=s0ns1 , b=sel[2] , out=isF ); // isF
    And(a=s1s2 , b=ns0 , out=isG ); // isG
    And(a=s0s1 , b=sel[2] , out=isH ); //isH

    And(a=in, b=isA , out=a);
    And(a=in, b=isB , out=b);
    And(a=in, b=isC , out=c);
    And(a=in, b=isD , out=d);
    And(a=in, b=isE , out=e);
    And(a=in, b=isF , out=f);
    And(a=in, b=isG , out=g);
    And(a=in, b=isH , out=h);
}